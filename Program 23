#include <stdio.I> #include <stdlib.h>
typedef unsigned char byte;
void generateRoundKeys(byte key, byte *k1, byte *k2) {
*k1=0×F3；
*k2 = 0xE3;
}
byte sdesEncrypt(byte plaintext, byte key) {
byte k1, k2; generateRoundKeys (key, &k1, &k2);
return plaintext ^ k1;
｝
void ctrEncrypt(byte *plaintext, byte key, int length) {
byte counter = 0x00;
int i;
for (i = 0; i < length; itt) {
byte encrypted = sdesEncrypt(counter, key);
plaintext［i］^= encrypted；
counter ++;
}
}
int main {
byte key = OxFD;
byte plaintext] = {0x01, 0x02, 0x04};
int length = sizeof(plaintext);
int i;
printi("Plaintext: ");
for (i= 0; i < length; it+) {
printf("%02X", plaintext[i]);
}
ctrEncrypt(plaintext, key, length);
printi(" Encrypted: ");
for (i= 0; i < length; it+){
printf(%02X", plaintexti));
}
ctrEncrypt(plaintext, key, length);
printf(" Decrypted: ");
for (1 = 0; i < length; it+) {
｝
printf("%02X", plaintext[i]);
printf（"ar）；
return 0;
}








