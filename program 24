#include <stdio.h>
int god(int a, int b) {
if (b= 0) retum a;
｝
return god(b, a % b);
int extendedGCD(int a, int b, int *x, int *y) {
if (b =0) {
*x=1；
*y =0; retun a;
}
int xl, yl;
int gcd = extendedGCD(b, a % b, &x1, &y1);
*x= yl;
*y= x1-(a/b) *yl;
return god;
}
int modInverse(int a, int m) {
int x, y;
int gcd = extendedGCD(a, m, &x, &y);
if (gcd!= 1) {
printf("Inverse does not exist. In");
retun -1;
}
int result = (x% m+m)%m;
return result;
}
int main) {
int e = 31;
int n= 3599;
int p, q;
for (p = 2; p <=n; p++) {
if (1 % p=0) {
q=n/ p;
break;
}
}
int phi_n= (p- 1) * (q- 1);
int d = modInverse(e, phin);
printf("Private key d: %di", d);
return 0;
}





